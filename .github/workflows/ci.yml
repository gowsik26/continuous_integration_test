name: CI/CD
on:
  push:
  pull_request:
    brances:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
        # change this to (see https://github.com/ruby/setup-ruby#versioning):
        # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@21351ecc0a7c196081abca5dc55b08f085efe09a
        with:
          ruby-version: 2.6
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - name: Ruby gem cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
        - name: Install gems
          run: |
            bundle config path vendor/bundle
            bundle install --jobs 4 --retry 3
      - name: Installing postgres
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: sudo apt-get install libpq-dev
      - name: Build bundler
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: running db migration
        run: |
          bundler exec rails db:create RAILS_ENV=test
          bundler exec rails db:migrate RAILS_ENV=test
      - name: run tests
        run: bundle exec rspec .
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage