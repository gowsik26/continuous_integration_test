name: CI/CD
on: 
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      PGHOST: localhost
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TEST_ENV_NUMBER: 4

    services:
      db:
        image: postgres:11
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.1
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install postgres
        run: sudo apt-get -yqq install libpq-dev
      - name: Install gems
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
#      - name: Build DB
#        run: bundle exec rake "parallel:setup[4]" || bundle exec rake "parallel:setup[4]"
#      - name: Running tests
#        continue-on-error: true
#        run: bundle exec rake "parallel:spec[4]"
#      - name: Retry failed tests
#        id: rerun_test
#        run: bundle exec rake "parallel:spec[4]" SPEC_OPTS='--only-failures'
      - name: Webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{secrets.ZAPIER_WEBHOOK}}
          headers: '{"repository": "gowsik26/continuous_integration_test"}'
          body: '{"event": "tests completed", "branch": "staging" }'
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: 'gowsik@mallow-tech.com'